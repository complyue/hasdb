
# this is the peer module for network console of the db

import * 'net/options'
import * 'db/options'

# `peer`, `db` and `app` should have been implanted into this module,
# by per-connection peer module initialization method.

console.info<| 'Console client connected - ' ++ peer

{

  # make those artifacts available from the app instance, esp. business
  # classes, directly available from here, so the client can reference
  # them by terse names, as in rpc commands it sends here.
  import * app

  # change console client's command prompt
  peer.p2c(
    0, # direct to conin to change command prompt
    repr( "(dbc)Đ: " )
  )

  while false == peer.eol() {  # this is the *Loop* in so-called REPL
    # Read+Eval (peer.readCommand) -> Print (peer.print) -> Loop

    case peer.readCommand() of {
      nil -> {  # conout an empty string or the console client will
        # wait for its eval result forever
        peer.p2c(
          1, # direct to channel conout := 1
          "''",
        )
      }
      shutdown -> {
        # shutdown the db app and commit its changes
        server.stop()
        peer.p2c(
          1, # direct to channel conout := 1
          "'DB shutdown issued.'",
        )
      }
      batteries.quit -> { break }  # quit the networked db console
      batteries.dir -> peer.p2c(
        1, # direct to channel conout := 1
        repr( sprintDir() ),
      )
      { cmdVal } -> {
        peer.p2c(
          1, # direct to channel conout := 1
          repr( cmdVal ),
        )
        cmdVal = nil  # clear it
      }
    }

  } $=> { cmdExc } -> {
    if false == peer.eol() then {
      peer.p2c(
        2, # direct to channel conmsg := 2
        repr( 'Recovered from error\n  exception=' ++ cmdExc),
      )
      peer.p2c(
        1, # direct to channel conout := 1
        "''",
      )
    }
  }

} $=> { cmdExc } -> {  # catch & report errors, don't crash the server
  console.error<| 'DB console client '++ peer ++ ' caused trouble:\n' ++ cmdExc
} @=> {
  console.info<| 'DB console client disconnected - ' ++ peer
}
