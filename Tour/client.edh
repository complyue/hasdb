
import * 'net/demo/cli'

# it is expected that the hasdb demo server to be there, e.g.
#   cabal v2-run hasdb < Tour/server.edh
cmdLineTo( '127.0.0.1', 3721, )

# the cli loop will try post each local stdio command to peer,
# and wait for a conout cmd for each posted cmd.

{
  # use interpolated expr to compose rpc commands, 
  # post to local conmsg := 2 for local logging,
  # post to local conout := 1 for cli eval result.

  expr {

    case db.deptByName[ 'Dev' ] of {
      { dev } -> { pass }

      peer.postCommand(repr(
        'Populating DB contents.'
      ), dir=2)

      dev = Depart('Dev')

      compl = Person( name = 'Compl', age = 41 )
      jim = Person( name = 'Jim', age = 11 )

      WorkFor( compl, dev, 12345 )
      WorkFor( jim, dev, 54321 )
    }

    case db.personByName['Compl'] of { compl=>_ } -> {
      peer.postCommand(repr(
        "Compl's record is: " ++ compl
      ), dir=2)
    }
    case db.personByName['Jim'] of { jim=>_ } -> {
      peer.postCommand(repr(
        "Got a Jim ver# " ++ ( jim.version $=> 'legacy' )
      ), dir=2)
    }
    peer.postCommand(repr(
      'Dev Org is ' ++ dev ++ ' with workers:'
    ), dir=2)
    for (ixk, workRel) from dev.workers.range() do 
      peer.postCommand(repr(
        '  ' ++ workRel.person ++ ' in order of ' ++ ixk
      ), dir=2)

    # some artificial delay
    for _ from console.everyMillis(200) do { break }

    peer.postCommand(repr("That's it atm."), dir=1)
  }
}

# quit service client cli
quit

# quit top-level repl
quit
