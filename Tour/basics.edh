
import * 'db'


{

  class DbLib {

    method __init__ (db as this.db) pass

    class Entity01 {

      method __init__ () {

        # don't do the `extends` in the class procedure, that'll confuse 
        # DataBack when instances are restored by history replay, in which
        # case a `SuperBack` is added as a super, automatically.
        extends db.superBack()
      }

    }

  }

}


{

  class DbApp {

    class Entity11 {

      method __init__ (name as this.name) {
        this.value = 555

        extends db.superBack()
      }

    }

    method run() {
      # `DataBack` instance will put `this` App as its first super,
      # `run()` is called against the db instance, so `that` here is
      # the actual `DataBack` instance.
      this.db = that
      # import some classes from a lib parameterized with current db instance.
      import * DbLib(that)

      e01 = Entity01()
      e01.name = 'Compl'
      e01.age = 41

      e11 = Entity11('Yue')
      e11.key = 'hahah'

    }
  }

}

runDbApp( './persist-data.hasdb', DbApp() )
